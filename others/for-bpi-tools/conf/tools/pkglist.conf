#!/bin/bash
#
## AUTOGEN BY ./bpi-pkg-list , DO NOT MODYFY THIS FILE
#
PKGLIST="
bpi-pkg-addons.conf
bpi-pkg-bpi-apps.conf
bpi-pkg-bpi-r2-wifi-firmware-tools.conf
bpi-pkg-bpi-service.conf
bpi-pkg-bpi-tools.conf
bpi-pkg-bpi-w2-tools.conf
bpi-pkg-bpi-wiringpi-arm64.conf
bpi-pkg-brcm.conf
bpi-pkg-bt-arm64.conf
bpi-pkg-bt.conf
bpi-pkg-camera-apps.conf
bpi-pkg-camera.conf
bpi-pkg-libvdpau_sunxi.conf
bpi-pkg-ov8865.conf
bpi-pkg-ov8865-enable.conf
"
#!/bin/bash
#
## debian lite
#
BPILICENSE="GPLv2 or any later version"
BPICONF="pkglist.conf"
BPICONFVERSION="v1.0.2"
#END
##########################################################################
#!/bin/bash
APP=$0
echo APP=$APP
STARTTIME=`date +%s`
_excode=0

if [ "$(id -u)" != "0" ]; then
   echo "Script must be run as root !"
   exit 0
fi

#
## show finished
#
show_finished() {
  echo ""
  date
  echo ""
  echo "************************************************************"
  echo "Instalation finished."
  echo "************************************************************"
  ENDTIME=`date +%s`
  RUNTIMESEC=$((ENDTIME-STARTTIME))
  MIN=$(((RUNTIMESEC)/60))
  SEC=$(((RUNTIMESEC)%60))
  echo "RUNTIME" "$MIN:$SEC"
  echo "************************************************************"
}

gen_boardlist_conf() {
CONFFILE="$1"
#
CONF=`ls board`
#
  echo '#!/bin/bash' > $CONFFILE
  echo '#' >> $CONFFILE
  echo "## AUTOGEN BY $APP , DO NOT MODYFY THIS FILE" >> $CONFFILE
  echo '#' >> $CONFFILE
  echo 'BOARDLIST="' >> $CONFFILE
  for IN in $CONF
  do
    echo "$IN" >> $CONFFILE
  done
  echo '"' >> $CONFFILE
  cat $APP >> $CONFFILE
}

bpi_boardlist()
{
  echo BPIBOARD=$BPIBOARD
  for IN in $BOARDLIST
  do
     if [[ $BPIBOARD == "" ]] ; then
       echo "$IN"
     else
       echo "$IN" | grep $BPIBOARD
     fi
  done
#  show_finished
}

gen_pkglist_conf() {
CONFFILE="$1"
#
CONF=`ls pkg`
#
  echo '#!/bin/bash' > $CONFFILE
  echo '#' >> $CONFFILE
  echo "## AUTOGEN BY $APP , DO NOT MODYFY THIS FILE" >> $CONFFILE
  echo '#' >> $CONFFILE
  echo 'PKGLIST="' >> $CONFFILE
  for IN in $CONF
  do
    echo "$IN" >> $CONFFILE
  done
  echo '"' >> $CONFFILE
  cat $APP >> $CONFFILE
}

bpi_pkglist()
{
  echo "PKGLIST:"
  for IN in $PKGLIST
  do
       echo "$IN"
  done
#  show_finished
}

generate_pkg_conf() {
	PACKAGE=$1
	
	cat <<-EOT
	#!/bin/bash
	#
	## bpi-pkg-${PACKAGE}.conf
	#
	BPILICENSE="GPLv2 or any later version"
	BPICONF="bpi-pkg-${PACKAGE}.conf"
	BPICONFVERSION="v1.0.1"
	BPIPACKAGE="${PACKAGE}.tgz"
	#
	## PACKAGE to ROOTFS
	#
	BPIFILES="\$BPIPACKAGE"
	#END
	EOT
}

gen_package_conf() {
#
PKGS=`ls ../../bpi-pkg*.sh`
#
  for IN in $PKGS
  do
    eval `grep "^PACKAGE" $IN`
    CONFFILE="pkg/bpi-pkg-${PACKAGE}.conf"
    echo CONFFILE="$CONFFILE"
    generate_pkg_conf "$PACKAGE" > $CONFFILE
  done
}


##########################################################
# main
##########################################################
case $APP in
*boardlist)
  CONFFILE="tools/boardlist.conf"
  echo "$APP: gen_boardlist_conf $CONFFILE"
  gen_boardlist_conf $CONFFILE
  exit 0
  ;;
*bpi-pkg-conf)
  echo "$APP: bpi-pkg-conf"
  gen_package_conf
  exit 0
  ;;
*bpi-pkg-list)
  CONFFILE="tools/pkglist.conf"
  echo "$APP: bpi-pkg-list $CONFFILE"
  gen_pkglist_conf $CONFFILE
  exit 0
  ;;
*)
  #echo "run: boardlist.conf: $APP"
  #bpi_boardlist
  bpi_pkglist
  exit 0
  ;;
esac

